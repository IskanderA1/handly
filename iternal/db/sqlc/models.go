// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0

package db

import (
	"database/sql"
	"fmt"
	"time"
)

type EventType string

const (
	EventTypeInfo     EventType = "info"
	EventTypeError    EventType = "error"
	EventTypeSuccess  EventType = "success"
	EventTypeUndefind EventType = "undefind"
)

func (e *EventType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = EventType(s)
	case string:
		*e = EventType(s)
	default:
		return fmt.Errorf("unsupported scan type for EventType: %T", src)
	}
	return nil
}

type Account struct {
	AccountID    string    `json:"account_id"`
	ProjectID    int64     `json:"project_id"`
	Name         string    `json:"name"`
	Token        string    `json:"token"`
	LastUpdateAt time.Time `json:"last_update_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Event struct {
	ID        int64     `json:"id"`
	ProjectID int64     `json:"project_id"`
	Name      string    `json:"name"`
	EventType EventType `json:"event_type"`
}

type Log struct {
	ID        int64          `json:"id"`
	ProjectID int64          `json:"project_id"`
	EventID   int64          `json:"event_id"`
	AccountID string         `json:"account_id"`
	Data      sql.NullString `json:"data"`
	CreatedAt time.Time      `json:"created_at"`
}

type Project struct {
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	Token     string    `json:"token"`
	CreatedAt time.Time `json:"created_at"`
}
